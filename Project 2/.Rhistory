";Port=",port,
";PROTOCOL=TCPIP",
";UID=", user.name,
";PWD=",pwd,sep="")
con1 <- odbcDriverConnect(con.text)
bcp <- odbcConnect("404-sql1.vm.epicservers.com", uid=user.name, pwd=pwd)
orders <- sqlQuery(bcp, "
SELECT * FROM dbo.orders
where OrderDate>='2/15/2017")
head(orders)
orders <- sqlQuery(bcp, "
SELECT * FROM dbo.orders
where OrderDate>='2/15/2017'")
View(orders)
View(orders)
library(iris)
iris
library(e1071)
install.packages("e1071")
library(e1071)
attach(iris)
x <- subset(iris, select=-Species)
y <- Species
x
y
svm_model <- svm(Species ~ ., data=iris)
summary(svm_model)
odbcCloseAll
odbcClose(bcp)
library(RODBC)
driver.name <- "SQL Server"
db.name <- "AndorraReporting"
host.name <- "404-sql1.vm.epicservers.com\\SQL1"
port <-""
server.name <- "SQL1"
user.name <-"Andorra_sa"
pwd <- "And@13579"
AR <- odbcConnect("404-sql1.vm.epicservers.com", uid=user.name, pwd=pwd)
Downline <- sqlQuery(AR, "
SELECT * FROM dbo.SVM
")
library(e1701)
x <- subset(Downline, select=-CustomerStatusID)
y <- CustomerStatusID
svm_model <- svm(CustomerStatusID ~ ., data=Downline)
summary(svm_model)
library(e1071)
attach(Downline)
x <- subset(Downline, select=-CustomerStatusID)
y <- CustomerStatusID
x
y
x <- subset(Downline, select=-CustomerStatusID)
y <- CustomerStatusID
svm_model <- svm(CustomerStatusID ~ ., data=Downline)
summary(svm_model)
```
View(Downline)
View(Downline)
Downline <- sqlQuery(AR, "
SELECT * FROM dbo.SVM
")
library(e1071)
attach(Downline)
x <- subset(Downline, select=-CustomerStatusID)
y <- CustomerStatusID
svm_model <- svm(CustomerStatusID ~ ., data=Downline)
summary(svm_model)
svm_model1 <- svm(x,y)
summary(svm_model1)
svm_model
pred <- predict(svm_model1,x)
system.time(pred <- predict(svm_model1,x))
pred <- predict(svm_model,x)
system.time(pred <- predict(svm_model,x))
table(pred,y)
head(table(pred,y))
AR <- odbcConnect("404-sql1.vm.epicservers.com", uid=user.name, pwd=pwd)
Downline <- sqlQuery(AR, "
SELECT * FROM dbo.SVM
where CustomerStatusID in (1,2)
")
attach(Downline)
x <- subset(Downline, select=-CustomerStatusID)
y <- CustomerStatusID
svm_model <- svm(CustomerStatusID ~ ., data=Downline)
summary(svm_model)
pred <- predict(svm_model,x)
system.time(pred <- predict(svm_model,x))
head(table(pred,y))
svm_tune <- tune(svm, train.x=x, train.y=y,
kernel="radial", ranges=list(cost=10^(-1:2), gamma=c(.5,1,2)))
Downline <- sqlQuery(AR, "
SELECT * FROM dbo.SVM
where CustomerStatusID <> 'Other'
")
View(Downline)
View(Downline)
attach(Downline)
x <- subset(Downline, select=-CustomerStatusID)
y <- CustomerStatusID
y
svm_model <- svm(CustomerStatusID ~ ., data=Downline)
summary(svm_model)
svm_model1 <- svm(x,y)
summary(svm_model1)
pred <- predict(svm_model,x)
system.time(pred <- predict(svm_model,x))
head(table(pred,y))
svm_tune <- tune(svm, train.x=x, train.y=y,
kernel="radial", ranges=list(cost=10^(-1:2), gamma=c(.5,1,2)))
View(Downline)
View(Downline)
Downline <- Downline[c(2:11)]
x <- subset(Downline, select=-CustomerStatusID)
y <- CustomerStatusID
svm_model <- svm(CustomerStatusID ~ ., data=Downline)
summary(svm_model)
pred <- predict(svm_model,x)
system.time(pred <- predict(svm_model,x))
head(table(pred,y))
svm_tune <- tune(svm, train.x=x, train.y=y,
kernel="radial", ranges=list(cost=10^(-1:2), gamma=c(.5,1,2)))
svm_tune <- tune(svm_model1, train.x=x, train.y=y,
kernel="radial", ranges=list(cost=10^(-1:2), gamma=c(.5,1,2)))
svm_tune <- tune(svm, train.x=x, train.y=y,
kernel="radial", ranges=list(cost=10^(-1:2), gamma=c(.5,1,2)))
new <- Downline[c(2,8,9)]
View(new)
View(new)
library(tree)
install.packages("tree")
library(tree)
tree1<-tree(CustomerStatusID ~ AMBvol+ APE, data = new)
summary(tree1)
plot(tree1)
text(tree1)
library(mlbench)
install.packages(mlbench)
install.packages("caret")
library("mlbench")
library(caret)
cor(Downline)
cor(Downline[,2:10])
cor(Downline[,3:10])
DownlineNumeric <- Downline[,3:10]
data(DownlineNumeric)
data(DownlineNumeric)
DownlineNumeric
control<-trainControl(method="repeatedcv", number=10, repeats=3)
control
attach(Downline)
model <- train(CustomerStatusID~., data=Downline, method="lvq", preProcess="scale", trControl=control)
model <- train(Months~., data=DownlineNumeric, method="lvq", preProcess="scale", trControl=control)
head(DownlineNumeric)
model <- train(months~., data=DownlineNumeric, method="lvq", preProcess="scale", trControl=control)
data(PimaIndiansDiabetes)
install.packages("FSelector")
install.packages("mlbench")
install.packages("FSelector")
install.packages("RWeka")
install.packages("RWekajars")
install.packages("RWeka")
install.packages("FSelector")
library(FSelector)
library(ggplot2)
new
head(new)
qplot(APE, AMBvol, data=new, colour=CustomerStatusID, size=I(4))
qplot(APE, AMBvol, data=Downline, colour=CustomerStatusID, size=I(4))
qplot(APE, MainCountry, data=Downline, colour=CustomerStatusID, size=I(4))
qplot(APE, maxrank, data=Downline, colour=CustomerStatusID, size=I(4))
qplot(APE, Stotcust, data=Downline, colour=CustomerStatusID, size=I(4))
qplot(APE, Stotcust, data=Downline, colour=maxrank, size=I(4))
qplot(APE, Atotcust, data=Downline, colour=maxrank, size=I(4))
qplot(APE, Atotcust, data=Downline, colour=CustomerStatusID, size=I(4))
qplot(APE, AHighKit, data=Downline, colour=CustomerStatusID, size=I(4))
qplot(AMVtot, AHighKit, data=Downline, colour=CustomerStatusID, size=I(4))
qplot(AMVtot, APE, data=Downline, colour=CustomerStatusID, size=I(4))
qplot(AMVtot, MainCountry, data=Downline, colour=CustomerStatusID, size=I(4))
AR <- odbcConnect("404-sql1.vm.epicservers.com", uid=user.name, pwd=pwd)
Downline <- sqlQuery(AR, "
SELECT * FROM dbo.SVM
where CustomerStatusID <> 'Other'
")
qplot(AMVtot, MainCountry, data=Downline, colour=CustomerStatusID, size=I(4))
qplot(APE, AHighKit, data=Downline, colour=CustomerStatusID, size=I(4))
Downline <- Downline[c(2:11)]
x <- subset(Downline, select=-CustomerStatusID)
y <- CustomerStatusID
svm_model <- svm(CustomerStatusID ~ ., data=Downline)
summary(svm_model)
pred <- predict(svm_model,x)
system.time(pred <- predict(svm_model,x))
head(table(pred,y))
AR <- odbcConnect("404-sql1.vm.epicservers.com", uid=user.name, pwd=pwd)
Downline <- sqlQuery(AR, "
SELECT * FROM dbo.SVM
where CustomerStatusID <> 'Other'
")
odbcClose(AR)
attach(Downline)
Downline <- Downline[c(2:11)]
x <- subset(Downline, select=-CustomerStatusID)
y <- CustomerStatusID
svm_model <- svm(CustomerStatusID ~ ., data=Downline)
summary(svm_model)
pred <- predict(svm_model,x)
system.time(pred <- predict(svm_model,x))
head(table(pred,y))
qplot(APE, AHighKit, data=Downline, colour=CustomerStatusID, size=I(4))
qplot(APE, AHighKit, data=Downline, colour=CustomerStatusID, size=I(2))
qplot(APE, AHighKit, data=Downline, colour=CustomerStatusID, size=I(1))
head(downline)
head(Downline)
Dtree <- Downline[c(2:10)]
head(Dtree)
tree1<-tree(CustomerStatusID ~ maxrank + months + Stotcust + Atotcust + AHighKit + APE + AMBvol + AMVtot, data=Dtree)
summary(tree1)
plot(tree1)
text(tree1)
install.packages("prettydoc")
install.packages("bookdown")
getwd()
dir
ls
getwd()
setwd("/Users/cesarespitia/documents/CUNYMSDA/DATA 607/CUNYDATA607/Project 2")
getwd()
Project2DS1 <- read.csv(file="/Users/cesarespitia/Documents/CUNYMSDA/Data 607/CUNYDATA607/Project 2/Discussion5.csv", header=TRUE, sep=",")
head(Project2DS1)
Project2DS1 <- read.csv(file="/Users/cesarespitia/Documents/CUNYMSDA/Data 607/CUNYDATA607/Project 2/Discussion5.csv", header=TRUE, sep=",",na.strings=c("NA","NaN", " "))
head(Project2DS1)
Project6DS1[is.na(Project6DS1)]<-""
Project6DS1 <- read.csv(file="/Users/cesarespitia/Documents/CUNYMSDA/Data 607/CUNYDATA607/Project 2/Discussion5.csv", header=TRUE, sep=",")
Project6DS1[is.na(Project6DS1)]<-""
head(Project6DS1)
library(tidyr)
library(dplyr)
library(stringr)
library(knitr)
library(RMySQL)
con <- dbConnect(RMySQL::MySQL(),
dbname = "CUNY607",
host = "localhost",
port = 3306,
user = "root",
password = "CUNYDATA")
table_names <- dbListTables(con)
HW5 <- dbReadTable(con, "HW5")
# Fill in missing arilines before doing cleanup
HW5[HW5$Performance == "delayed" & HW5$LosAngeles == "62" &  HW5$Airline == "", "Airline"] <- "ALASKA"
HW5[HW5$Performance == "delayed" & HW5$LosAngeles == "117" &  HW5$Airline == "", "Airline"] <- "AM WEST"
kable(HW5, caption="Table 1. Data from MySQL with empty cells filled in")
head(Project6DS1)
HW5<-tbl_df(HW5)
HW5 %>% filter(Performance != "")  %>% gather("Destination","Count",4:8)
Project6DS1<-tbl_df(Project6DS1)
Project6DS1  %>% gather("Country","Costs",3:10)
dim(Project6DS1)
tail(Project6DS1)
HW5a <- HW5 %>% filter(Performance != "")  %>% gather("Destination","Count",4:8)
HW5a <- HW5a[2:5]
HW5a %>% group_by(Airline, Performance, Destination) %>%spread(Performance, Count)
HW5 %>% filter(Performance != "")  %>% gather("Destination","Count",4:8)
HW5<-tbl_df(HW5)
HW5 %>% filter(Performance != "")  %>% gather("Destination","Count",4:8)
HW5 <- dbReadTable(con, "HW5")
# Fill in missing arilines before doing cleanup
HW5[HW5$Performance == "delayed" & HW5$LosAngeles == "62" &  HW5$Airline == "", "Airline"] <- "ALASKA"
HW5[HW5$Performance == "delayed" & HW5$LosAngeles == "117" &  HW5$Airline == "", "Airline"] <- "AM WEST"
kable(HW5, caption="Table 1. Data from MySQL with empty cells filled in")
```
HW5<-tbl_df(HW5)
HW5 %>% filter(Performance != "")  %>% gather("Destination","Count",4:8)
HW5<-tbl_df(HW5)
HW5a <- HW5 %>% filter(Performance != "")  %>% gather("Destination","Count",4:8)
HW5a <- HW5a[2:5]
HW5a
HW5a %>% group_by(Airline, Performance, Destination) %>%spread(Performance, Count)
HW5a %>% group_by(Airline, Performance, Destination) %>%spread(Performance, Count)
con <- dbConnect(RMySQL::MySQL(),
dbname = "CUNY607",
host = "localhost",
port = 3306,
user = "root",
password = "CUNYDATA")
table_names <- dbListTables(con)
HW5 <- dbReadTable(con, "HW5")
# Fill in missing arilines before doing cleanup
HW5[HW5$Performance == "delayed" & HW5$LosAngeles == "62" &  HW5$Airline == "", "Airline"] <- "ALASKA"
HW5[HW5$Performance == "delayed" & HW5$LosAngeles == "117" &  HW5$Airline == "", "Airline"] <- "AM WEST"
kable(HW5, caption="Table 1. Data from MySQL with empty cells filled in")
HW5<-tbl_df(HW5)
HW5 %>% filter(Performance != "")  %>% gather("Destination","Count",4:8)
HW5a <- HW5 %>% filter(Performance != "")  %>% gather("Destination","Count",4:8)
HW5a <- HW5a[2:5]
HW5a %>% group_by(Airline, Performance, Destination) %>%spread(Performance, Count)
head(Project6DS1)
Project6DS1<-tbl_df(Project6DS1)
Project6DS1a <- Project6DS1  %>% gather("Country","Costs",3:10)
head(Project6DS1)
Project6DS1  %>% gather("Country","Costs",3:10)
Project6DS1a <- Project6DS1  %>% gather("Country","Costs",3:10)
head(Project6DS1a)
Project6DS1 <- read.csv(file="/Users/cesarespitia/Documents/CUNYMSDA/Data 607/CUNYDATA607/Project 2/Discussion5.csv", header=TRUE, sep=",")
Project6DS1[is.na(Project6DS1)]<-""
Project6DS1<-tbl_df(Project6DS1)
Project6DS1a <- Project6DS1  %>% gather("Country","Costs",3:10)
Project6DS1a %>% group_by(Date, Values, Country) %>%spread(Values, Costs)
Project6DS1a %>% group_by(Date, Values, Country)
HW5a %>% group_by(Airline, Performance, Destination) %>%spread(Performance, Count)
Project6DS1  %>% gather("Country","Costs",3:10)
head(Proejct6ds1)
head(Project6DS1)
Project6DS1[, seq(1, ncol(Project6DS1), by = 2)]
head(Project6DS1[,1])
i <- 1
i
Project6DS1[i,1]
Project6DS1[i+1,1]
Project6DS1[i+1,1]<-Project6DS1[i,1]
Project6DS1[1,1]
Project6DS1[2,1]
head(Project6DS1)
Project6DS1 <- read.csv(file="/Users/cesarespitia/Documents/CUNYMSDA/Data 607/CUNYDATA607/Project 2/Discussion5.csv", header=TRUE, sep=",")
Project6DS1[is.na(Project6DS1)]<-""
i <- 1
while (i<100) {
Project6DS1[i+1,1]<-Project6DS1[i,1]
i <- i+1
}
head(Project6DS1)
Project6DS1 <- read.csv(file="/Users/cesarespitia/Documents/CUNYMSDA/Data 607/CUNYDATA607/Project 2/Discussion5.csv", header=TRUE, sep=",")
Project6DS1[is.na(Project6DS1)]<-""
i <- 0
while (i<100) {
Project6DS1[i+2,1]<-Project6DS1[i+1,1]
i <- i+1
}
head(Project6DS1)
Project6DS1 <- read.csv(file="/Users/cesarespitia/Documents/CUNYMSDA/Data 607/CUNYDATA607/Project 2/Discussion5.csv", header=TRUE, sep=",")
Project6DS1[is.na(Project6DS1)]<-""
i <- 0
while (i<100) {
Project6DS1[i+2,1]<-Project6DS1[i+1,1]
i <- i+2
}
head(Project6DS1)
Project6DS1<-tbl_df(Project6DS1)
Project6DS1a <- Project6DS1  %>% gather("Country","Costs",3:10)
Project6DS1a %>% group_by(Date, Values, Country) %>%spread(Values, Costs)
sapply<-(Project6DS1a,mode)
sapply<-(Project6DS1a, mode)
head(Project6DS1a)
sapply(Project6DS1a[, c(4)], as.numeric)
Project6DS1 <- read.csv(file="/Users/cesarespitia/Documents/CUNYMSDA/Data 607/CUNYDATA607/Project 2/Discussion5.csv", header=TRUE, sep=",")
Project6DS1[is.na(Project6DS1)]<-""
i <- 0
while (i<100) {
Project6DS1[i+2,1]<-Project6DS1[i+1,1]
i <- i+2
}
Project6DS1<-tbl_df(Project6DS1)
Project6DS1a <- Project6DS1  %>% gather("Country","Costs",3:10)
Project6DS1a <- sapply(Project6DS1a[, c(4)], as.numeric)
head(Project6DS1a)
Project6DS1 <- read.csv(file="/Users/cesarespitia/Documents/CUNYMSDA/Data 607/CUNYDATA607/Project 2/Discussion5.csv", header=TRUE, sep=",")
Project6DS1[is.na(Project6DS1)]<-""
i <- 0
while (i<100) {
Project6DS1[i+2,1]<-Project6DS1[i+1,1]
i <- i+2
}
Project6DS1<-tbl_df(Project6DS1)
Project6DS1a <- Project6DS1  %>% gather("Country","Costs",3:10)
#Convert character to numeric
Project6DS1a[, c(4)] <- sapply(Project6DS1a[, c(4)], as.numeric)
head(Project6DS1a)
Project6DS1a %>% group_by(Date, Values, Country) %>%spread(Values, Costs)
Project6DS1a[c(157,158),]
Project6DS1 <- read.csv(file="/Users/cesarespitia/Documents/CUNYMSDA/Data 607/CUNYDATA607/Project 2/Discussion5.csv", header=TRUE, sep=",")
Project6DS1[is.na(Project6DS1)]<-""
i <- 0
while (i<1000) {
Project6DS1[i+2,1]<-Project6DS1[i+1,1]
i <- i+2
}
View(Project6DS1)
View(Project6DS1)
Project6DS1[c(1:56),]
Project6DS1 <- Project6DS1[c(1:57),]
Project6DS1 <- read.csv(file="/Users/cesarespitia/Documents/CUNYMSDA/Data 607/CUNYDATA607/Project 2/Discussion5.csv", header=TRUE, sep=",")
Project6DS1[is.na(Project6DS1)]<-""
i <- 0
while (i<1000) {
Project6DS1[i+2,1]<-Project6DS1[i+1,1]
i <- i+2
}
Project6DS1 <- Project6DS1[c(1:56),]
View(Project6DS1)
View(Project6DS1)
Project6DS1<-tbl_df(Project6DS1)
Project6DS1a <- Project6DS1  %>% gather("Country","Costs",3:10)
Project6DS1a[, c(4)] <- sapply(Project6DS1a[, c(4)], as.numeric)
head(Project6DS1a)
Project6DS1a %>% group_by(Date, Values, Country) %>% spread(Values, Costs)
Project6DS1a <- Project6DS1a %>% group_by(Date, Values, Country) %>% spread(Values, Costs)
str_to_title(colnames(Project6DS1a))
colnames(Project6DS1a) <- str_to_title(colnames(Project6DS1a))
kable(head(Project6DS1), caption = "Table 1. Unitdy Data")
Project6DS1 <- read.csv(file="/Users/cesarespitia/Documents/CUNYMSDA/Data 607/CUNYDATA607/Project 2/Discussion5.csv", header=TRUE, sep=",")
Project6DS1[is.na(Project6DS1)]<-""
kable(head(Project6DS1), caption = "Table 1. Unitdy Data")
i <- 0
while (i<1000) {
Project6DS1[i+2,1]<-Project6DS1[i+1,1]
i <- i+2
}
Project6DS1 <- Project6DS1[c(1:56),]
Project6DS1<-tbl_df(Project6DS1)
Project6DS1a <- Project6DS1  %>% gather("Country","Costs",3:10)
Project6DS1a[, c(4)] <- sapply(Project6DS1a[, c(4)], as.numeric)
Project6DS1a <- Project6DS1a %>% group_by(Date, Values, Country) %>% spread(Values, Costs)
colnames(Project6DS1a) <- str_to_title(colnames(Project6DS1a))
kable(Project6DS1a, caption="Table 2. Airline Data Tidy and Spread for Analysis")
Project6DS1a[is.na(Project6DS1a)] <- 0
kable(head(Project6DS1a), caption="Table 2. Data Cleaned Up")
Project6DS1a %>% mutate(Delta = `Shipping Fees Collected`-`Price of Carrier`)
head(Project6DS1a)
Project6DS1a %>% mutate(Delta = `Shipping Fees Collected`-`Price of Carrier`)
View(Project6DS1a)
View(Project6DS1a)
colnames(Project6DS1a)
Project6DS1a %>% mutate(Delta = `Shipping Fees Collected`-`Price Of Carrier`)
Project6DS1b <- Project6DS1a %>% mutate(Delta = `Shipping Fees Collected`-`Price Of Carrier`)
Project6DS1c <- Project6DS1b %>% group_by(Country) %>% summarise(FeeDelta = mean(Delta,2))
kable(Project6DS1c, caption="Table 3. Fees Collected by Country")
head(Project6DS1b)
Project6DS1b[!Project6DS1b$Delta == 0, ]
i <- 0
while (i<1000) {
Project6DS1[i+2,1]<-Project6DS1[i+1,1]
i <- i+2
}
Project6DS1 <- Project6DS1[c(1:56),]
Project6DS1<-tbl_df(Project6DS1)
Project6DS1a <- Project6DS1  %>% gather("Country","Costs",3:10)
#Convert character to numeric
Project6DS1a[, c(4)] <- sapply(Project6DS1a[, c(4)], as.numeric)
Project6DS1a <- Project6DS1a %>% group_by(Date, Values, Country) %>% spread(Values, Costs)
colnames(Project6DS1a) <- str_to_title(colnames(Project6DS1a))
Project6DS1a[is.na(Project6DS1a)] <- 0
kable(head(Project6DS1a), caption="Table 2. Data Cleaned Up")
Project6DS1b <- Project6DS1a %>% mutate(Delta = `Shipping Fees Collected`-`Price Of Carrier`)
Project6DS1b <- Project6DS1b[!Project6DS1b$Delta == 0, ]
head(Project6DS1b)
Project6DS1b %>% group_by(Country) %>% summarise(FeeDelta = mean(Delta,2))
Project6DS1c <- Project6DS1b %>% group_by(Country) %>% summarise(FeeDelta = mean(Delta,2))
kable(Project6DS1c, caption="Table 3. Average Delta Fees Collected by Country")
con <- dbConnect(RMySQL::MySQL(),
dbname = "CUNY607",
host = "localhost",
port = 3306,
user = "root",
password = "CUNYDATA")
table_names <- dbListTables(con)
Project6DS2 <- dbReadTable(con, "Project2DS2")
head(Project6DS2)
kable(head(Project6DS2), caption = "Table 1. Unitdy Data")
Project6DS2<-tbl_df(Project6DS2)
head(Project6DS2)
Project6DS2  %>% gather("CensusRegion","Values",3:5)
head(HW5)
head(Project6DS2)
Project6DS2  %>% gather("RegionValues","Values",3:5)
Project6DS2<-tbl_df(Project6DS2)
Project6DS2a <- Project6DS2  %>% gather("RegionMetrics","Values",3:5)
head(HW5a)
Project6DS2a <- Project6DS2a[2:4]
head(Project6DS2a)
Project6DS2a %>% group_by(CensusRegion, RegionValues)
Project6DS2a %>% group_by(CensusRegion, RegionMetrics)
Project6DS2a %>% group_by(CensusRegion, RegionMetrics) %>% spread(CensusRegion, Values)
str_to_title(colnames(Project6DS2a))
Project6DS2a <- Project6DS2a[2:4]
Project6DS2a <- Project6DS2a %>% group_by(CensusRegion, RegionMetrics) %>% spread(CensusRegion, Values)
colnames(Project6DS2a) <- str_to_title(colnames(Project6DS2a))
kable(head(Project6DS1a), caption="Table 2. Data Cleaned Up and Inverted for Analysis")
con <- dbConnect(RMySQL::MySQL(),
dbname = "CUNY607",
host = "localhost",
port = 3306,
user = "root",
password = "CUNYDATA")
table_names <- dbListTables(con)
Project6DS2 <- dbReadTable(con, "Project2DS2")
kable(head(Project6DS2), caption = "Table 1. Unitdy Data")
Project6DS2<-tbl_df(Project6DS2)
Project6DS2a <- Project6DS2  %>% gather("RegionMetrics","Values",3:5)
Project6DS2a <- Project6DS2a[2:4]
Project6DS2a <- Project6DS2a %>% group_by(CensusRegion, RegionMetrics) %>% spread(CensusRegion, Values)
colnames(Project6DS2a) <- str_to_title(colnames(Project6DS2a))
kable(head(Project6DS1a), caption="Table 2. Data Cleaned Up and Inverted for Analysis")
kable(head(Project6DS2a), caption="Table 2. Data Cleaned Up and Inverted for Analysis")
head(Project6DS2a)
colnames(Project6DS2a)
Project6DS2a %>% mutate(Average = (`Census Region 1: Northeast (Cens-R1)`+`Census Region 2: Midwest (Cens-R2)`+`Census Region 3: South (Cens-R3)`+`Census Region 4: West (Cens-R4)`)/4)
Project6DS2b <- Project6DS2a %>% mutate(Average = (`Census Region 1: Northeast (Cens-R1)`+`Census Region 2: Midwest (Cens-R2)`+`Census Region 3: South (Cens-R3)`+`Census Region 4: West (Cens-R4)`)/4)
#Method 1
kable(Project6DS2c, caption="Table 3. Average Delta Fees Collected by Country")
kable(Project6DS2b, caption="Table 3. Average Delta Fees Collected by Country")
