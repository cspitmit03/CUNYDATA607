ID
str_extract_all(table1,"\\b({1,40} ){3}")
str_extract_all(table1,"\\b{1,40} ")
table1
str_extract_all(table1,"\\b[A-Z]{1,40}\\b")
str_extract_all(table1,"\\b[A-Z]{2,40}\\b")
paste(str_extract_all(table1,"\\b[A-Z]{2,40}\\b"),"")
str_extract_all(table1,"\\b[A-Z]{2,40}\\b")
paste(str_extract_all(table1,"\\b[A-Z]{2,40}\\b"))
sapply(strsplit(table1, split=", "),function(y) {paste(rev(y),collapse=" ")})
strsplit(table1, split" ")
strsplit(table1, split=" ")
strsplit(str_extract_all(table1,"\\b[A-Z]{2,40}\\b"), split=" ")
str_extract_all(table1,"\\b[A-Z]{2,40}\\b")
table[(table[,1]=="1"),2]
table1<-table[(table[,1]=="1"),2]
table2<-table[(table[,1]=="2"),2]
ID<-str_extract(table1,"\\d{1,2} \\| ")
ID<-ID[complete.cases(ID)]
ID<-str_extract(ID,"\\d{1,2}")
str_extract_all(table1,"\\b[A-Z]{2,40}\\b")
paste(str_extract_all(table1,"\\b[A-Z]{2,40}\\b"),collapse=" ")
str_extract_all(table1,"\\b[A-Z]{2,40}\\b")
names<-str_extract_all(table1,"\\b[A-Z]{2,40}\\b")
names
paste(names)
cbind(ID,names)
names
unlist(str_extract_all(table1,"\\b[A-Z]{2,40}\\b"))
str_extract_all(table1,"\\b[A-Z]{2,40}\\b")
str_c(str_extract_all(table1,"\\b[A-Z]{2,40}\\b"))
paste(name,sep="")
str_extract_all(table1,"\\b[A-Z]{2,40}\\b")
names<- str_extract_all(table1,"\\b[A-Z]{2,40}\\b")
paste(names, sep="")
paste(names, collapse="")
paste(str_extract_all(table1,"\\b[A-Z]{2,40}\\b"), collapse="")
paste(str_extract_all(table1,"\\b[A-Z]{2,40}\\b"), sep="")
name
names
typeof(names)
unlist(names)
sapply(names, paste0, collapse="")
sapply(names, paste0, collapse=" ")
str_extract_all(table1,"\\b[A-Z]{2,40}\\b")
names<- str_extract_all(table1,"\\b[A-Z]{2,40}\\b")
names<- sapply(names, paste0, collapse=" ")
names
cbind(ID,names)
str_extract(table2,"\\w{2} \\| ")
str_extract(ST,"\\w{2}")
ST<-str_extract(table2,"\\w{2} \\| ")
ST<-ST[complete.cases(ST)]
ST<-str_extract(ST,"\\w{2}")
ST
cbind(ID,names,ST)
str_extract(table1,"|\\d{1}\\.\\d{1}")
str_extract(table1,"|\\d{1}.\\d{1}")
str_extract(table1,"\\d{1}.\\d{1}")
str_extract(table1,"\\d{1}.\\d{1}")
pts<- str_extract(table1,"|\\d{1}\\.\\d{1}")
pts*2
pts
str_extract(table1,"\\d{1}.\\d{1}")
pts<- str_extract(table1,"\\d{1}.\\d{1}")
pts
pts*2
data.frame(pts)
2*(data.frame(pts))
cbind(ID,data.frame(pts))
data.frame(str_extract(table1,"\\d{1}.\\d{1}"))
pts<- data.frame(str_extract(table1,"\\d{1}.\\d{1}"))
pts*2
Pts+pts
pts+pts
cbind(ID, names, ST, pts)
str_extract_all(table2,"R: \\d{4}"))
str_extract_all(table2,"R\\: \\d{4}"))
str_extract_all(table2,"\\: \\d{4}"))
str_extract_all(table2,"\\: \\d{4}")
prerating<- str_extract_all(table2,"\\: \\d{4}")
str_extract(prerating,"\\d{4}")
prerating<- str_extract_all(table2,"\\: \\d{4}|\\:  \\d{3}")
str_extract(prerating,"\\d{4}")
str_extract_all(table2,"\\:  \\d{3}")
str_extract_all(table2,"\\:  \\d{3}")
str_extract_all(table2,"\\:.{2}\\d{3}")
str_extract_all(table2,"\\:.{2}\\d{3,4}")
str_extract(table2,"\\:.{2}\\d{3,4}")
str_extract(table2,"\\:?{2}\\d{3,4}")
str_extract(table2,"\\:.+{2}\\d{3,4}")
str_extract(table2,"\\:[ ]\\d{3,4}")
str_extract(table2,"\\:[ ]\\d{4}")
str_extract(table2,"\\:[  ]\\d{3}")
str_extract(table2,"\\:[:blank:]{1,2}\\d{3}")
str_extract(table2,"\\:[:blank:]{1,2}\\d{4}")
str_extract(table2,"\\:[:blank:]{1,2}")
str_extract(table2,"\\:[:blank:]")
str_extract(table2,"\\:[:blank:].{2}")
str_extract(table2,"\\:[:blank:][:blank:]")
str_extract(table2,"\\:[:blank:]+")
str_extract(table2,"\\:[:blank:]+{2}")
str_extract(table2,"\\d{3,4}")
str_extract_all(table2,"\\d{3,4}")
data.frame(str_extract_all(table2,"\\d{3,4}"))
sapply(str_extract_all(table2,"\\d{3,4}"),paste0,collapse=" ")
data.frame(sapply(str_extract_all(table2,"\\d{3,4}"),paste0,collapse=" "))
prerating<- data.frame(sapply(str_extract_all(table2,"\\d{3,4}"),paste0,collapse=" "))
prerating
prerating[,3]
prerating[3,]
unlist(prerating[3,])
prerating<- data.frame(sapply(str_extract_all(table2," \\d{3,4}"),paste0,collapse=" "))
prerating
prerating<- data.frame(sapply(str_extract_all(table2,": \\d{3,4}"),paste0,collapse=" "))
prerating
prerating<- sapply(str_extract_all(table2,": \\d{3,4}"),paste0,collapse=" ")
prerating
str_extract_all(table2,"\\d{3,4}")
prerating<-str_extract_all(table2,"\\d{3,4}")
matrix(unlist(prerating),ncol=4,byrow=TRUE)
prerating<-matrix(unlist(prerating),ncol=4,byrow=TRUE)
prerating<-str_extract_all(table2,"\\d{3,4}")
prerating<-matrix(unlist(prerating),ncol=4,byrow=TRUE)
prerating
prerating[,3]
preratings<-prerating[,3]
preratings
cbind(ID,names,ST,pts,preratings)
str_extract_all(table1,"W \\d{1,2}")
str_extract_all(table1,"W \\d{1,2}|L \\d{1,2}|B \\d{1,2}")
str_extract_all(table1,"\\d{1,2")
str_extract_all(table1,"\\d{1,2"})
str_extract_all(table1,"\\d{1,2}")
str_extract_all(table1,"W[:blank:]{1,2}\\d{1,2}|L \\d{1,2}|B \\d{1,2}")
str_extract_all(table1,"W[:blank:]{1,2}\\d{1,2}|L[:blank:]{1,2}\\d{1,2}|B[:blank:]{1,2}\\d{1,2}|D[:blank:]{1,2}\\d{1,2}")
str_extract_all(table1,"\\d{1,2}")
vals<-str_extract_all(table1,"\\d{1,2}")
vals<-matrix(unlist(vals),ncol=10,byrow=TRUE)
vals
vals
vals<-str_extract_all(table1,"\\d{1,2}")
vals
matrix(vals,col=10)
matrix(unlist(vals),ncol=10,byrow=TRUE)
matrix(unlist(vals),ncol=10,byrow=FALSE)
vals
vals<-str_extract_all(table1,"\\d{1,2}|")
vals
str_extract_all(table1,"\\d{1,2}\\|")
vals<-str_extract_all(table1,"\\d{1,2}\\|")
str_extract_all(table1,"\\d{1,2}\\")
str_extract_all(table1,"\\d{1,2}")
vals
unlist(vals)
sapply(vals,paste0,collapse="")
vals<-str_extract_all(table1,"\\d{1,2}")
vals
vals<-str_extract_all(table1,"\\d{1,2}\\|")
vals<-str_extract_all(table1,"\\d{1,2}")
vals<-sapply(vals,paste0,collapse="")
vals
vals<-str_extract_all(table1,"\\d{1,2}\\|")
vals
vals<-str_extract_all(table1,"\\d{1,2}")
vals
vals<-str_extract_all(table1,"\\d{1,2}\\|")
vals
vals<-str_extract_all(table1,"\\d{1,2}")
vals
lapply(vals, as.character)
library(stringi)
temp <- stri_list2matrix(vals, byrow = TRUE)
temp
final <- `dim<-`(as.numeric(temp), dim(temp))
final
final[,{4:10}]
final[,(4:10)]
final
final <- final[,(4:10)]
final
final*2
final
final*2
rowsum(final)
library(qdapTools)
install.packages("qdapTools")
library(qdapTools)
matchvals<-cbind(ID,preratings)
final[, 1] %l% matchvals
matchvals
replace(final[NA=0])
data.frame(final)
data.frame(final)*2
TD <- data.frame(a = 1:3, b = letters[10:12],
c = seq(as.Date("2004-01-01"), by = "week", len = 3),
stringsAsFactors = TRUE)
TD
typeof(TD)
data.matrix(TD[1:2])
data.matrix(matchvals)
matchvals<- data.frame(a=ID, b=preratings)
matchvals
data.matrix(TD[1:2])
data.matrix(matchvals[1:2])
data.matrix(TD)
final[, 1] %l% matchvals
matchvals
final[, 1]
matchvals[,1]
typeof(final)
typeof(matchvals)
final[, 1] %l% matchvals
matchvals<- data.matrix(a=ID, b=preratings)
matchvals<-data.matrix(ID,preratings)
matchvals
data.frame(a = ID, b=preratings
stringsAsFactors = TRUE)
data.frame(a = ID, b=preratings,
stringsAsFactors = TRUE)
matchvals<-data.frame(a = ID, b=preratings,
stringsAsFactors = TRUE)
typeof(matchvals)
typeof(final)
final
matchvals<-data.matrix(matchvals[1:2])
matchvals
typeof(matchvals)
typeof(final)
final[, 1] %l% matchvals
View(final)
View(final)
View(matchvals)
View(matchvals)
k <- c(1:7)
final
k <- c(1:7)
while(k<8) {
scores<-final[,k] %l% matchvals
k<-k+1
}
scores
final
k <- 1
k
while(k<8) {
scores<-final[,k] %l% matchvals
k<-k+1
}
scores
k <- 1
scores<-matrix(, nrow = 64, ncol = 7)
while(k<8) {
scores[,k]<-final[,k] %l% matchvals
k<-k+1
}
scores
final[,2] %l% matchvals
final
scores<-matrix(, nrow = 64, ncol = 7)
rowSums(scores)
scores
while(k<8) {
scores[,k]<-final[,k] %l% matchvals
k<-k+1
}
scores
k <- 1
scores<-matrix(, nrow = 64, ncol = 7)
while(k<8) {
scores[,k]<-final[,k] %l% matchvals
k<-k+1
}
scores
scores[is.na(scores)]<-0
scores
sumRows(scores)
rowSums(scores)
preratings
matchvals
matchvals<-data.frame(a = ID, b=preratings,
stringsAsFactors = TRUE)
matchvals<-data.matrix(matchvals[1:2])
matchvals
data.frame(ID,preratings,
stringsAsFactors = TRUE)
matchvals<-data.frame(ID,preratings,
stringsAsFactors = TRUE)
matchvals<-data.matrix(matchvals[1:2])
matchvals
preratings
vals
stri_list2matrix(preratings, byrow = TRUE)
library(stringi)
stri_list2matrix(preratings, byrow = TRUE)
data.matrix(ID,preratings)
cbind(ID,preratings)
typeof(preratings)
preratings2<-as.factor(preratings)
preratings2
data.frame(ID,preratings2)
preratings<-as.factor(preratings)
preratings
matchvals<-data.frame(ID,preratings,
stringsAsFactors = TRUE)
matchvals
matchvals<-data.matrix(matchvals[1:2])
matchvals
matchvals<-data.frame(ID,preratings,
stringsAsFactors = TRUE)
matchvals
as.matrix(sapply(matchvals, as.numeric))
matchvals[1]
matchvals[2]
data.matrix(matchvals[2])
data.matrix(as.numeric(matchvals[2]))
matchvals[[2]]
as.numeric(matchvals[[2]])
as.numeric(as.character(matchvals))
as.numeric(as.character(matchvals[[2]]))
matchvals
matchvals[,2]<-as.numeric(as.character(matchvals[[2]]))
matchvals
matchvals[,1]<-as.numeric(as.character(matchvals[[1]]))
matchvals
matchvals*2
matchvals
pts<- data.frame(str_extract(table1,"\\d{1}.\\d{1}"))
#prerating
prerating<-str_extract_all(table2,"\\d{3,4}")
prerating<-matrix(unlist(prerating),ncol=4,byrow=TRUE)
preratings<-prerating[,3]
#Values per match
vals<-str_extract_all(table1,"\\d{1,2}\\|")
vals<-str_extract_all(table1,"\\d{1,2}")
lapply(vals, as.character)
library(stringi)
temp <- stri_list2matrix(vals, byrow = TRUE)
final <- `dim<-`(as.numeric(temp), dim(temp))
final <- final[,(4:10)]
#convert preratings to factor to insert into data
preratings<-as.factor(preratings)
matchvals<-data.frame(ID,preratings,
stringsAsFactors = TRUE)
matchvals[,1]<-as.numeric(as.character(matchvals[[1]]))
matchvals[,2]<-as.numeric(as.character(matchvals[[2]]))
k <- 1
scores<-matrix(, nrow = 64, ncol = 7)
while(k<8) {
scores[,k]<-final[,k] %l% matchvals
k<-k+1
}
scores
scores[is.na(scores)]<-0
rowSums(scores)
View(scores)
View(scores)
scores<-matrix(, nrow = 64, ncol = 7)
while(k<8) {
scores[,k]<-final[,k] %l% matchvals
k<-k+1
}
length(scores)
vals
typeof(vals)
length(vals)
apply(vals, MARGIN = 1, FUN = function(x) length(x[!is.na(x)]) )
vals
preratings
scores
vals<-str_extract_all(table1,"\\d{1,2}\\|")
vals<-str_extract_all(table1,"\\d{1,2}")
lapply(vals, as.character)
library(stringi)
temp <- stri_list2matrix(vals, byrow = TRUE)
final <- `dim<-`(as.numeric(temp), dim(temp))
final <- final[,(4:10)]
#convert preratings to factor to insert into data
preratings<-as.factor(preratings)
matchvals<-data.frame(ID,preratings,
stringsAsFactors = TRUE)
matchvals[,1]<-as.numeric(as.character(matchvals[[1]]))
matchvals[,2]<-as.numeric(as.character(matchvals[[2]]))
k <- 1
scores<-matrix(, nrow = 64, ncol = 7)
while(k<8) {
scores[,k]<-final[,k] %l% matchvals
k<-k+1
}
#manipulate matrix to remove NAs
scores[is.na(scores)]<-0
#sumrows
rowSums(scores)
vals<-str_extract_all(table1,"\\d{1,2}\\|")
vals<-str_extract_all(table1,"\\d{1,2}")
lapply(vals, as.character)
library(stringi)
temp <- stri_list2matrix(vals, byrow = TRUE)
final <- `dim<-`(as.numeric(temp), dim(temp))
final <- final[,(4:10)]
#convert preratings to factor to insert into data
preratings<-as.factor(preratings)
matchvals<-data.frame(ID,preratings,
stringsAsFactors = TRUE)
matchvals[,1]<-as.numeric(as.character(matchvals[[1]]))
matchvals[,2]<-as.numeric(as.character(matchvals[[2]]))
k <- 1
scores<-matrix(, nrow = 64, ncol = 7)
while(k<8) {
scores[,k]<-final[,k] %l% matchvals
k<-k+1
}
scores
scores[!is.na(scores)]<-1
scores
played<-scores[!is.na(scores)]<-1
played<-scores[is.na(scores)]<-0
played
k <- 1
scores<-matrix(, nrow = 64, ncol = 7)
while(k<8) {
scores[,k]<-final[,k] %l% matchvals
k<-k+1
}
played<-scores[!is.na(scores)]<-1
played<-scores[is.na(scores)]<-0
played
k <- 1
scores<-matrix(, nrow = 64, ncol = 7)
while(k<8) {
scores[,k]<-final[,k] %l% matchvals
k<-k+1
}
scores
played<-scores
played<-scores[!is.na(scores)]<-1
played<-scores[is.na(scores)]<-0
played
k <- 1
scores<-matrix(, nrow = 64, ncol = 7)
while(k<8) {
scores[,k]<-final[,k] %l% matchvals
k<-k+1
}
played<-scores
played
played<-played[!is.na(played)]<-1
played<-played[is.na(played)]<-0
played
played<-scores
played
played[!is.na(played)]<-1
played
played[is.na(played)]<-0
played
rowSums(played)
played<-rowSums(played)
played
cbind(ID,played)
played<-scores
played[!is.na(played)]<-1
played[is.na(played)]<-0
played<-rowSums(played)
#manipulate matrix to remove NAs
scores[is.na(scores)]<-0
#sumrows
scores<-rowSums(scores)
played
scores
scores%/%played
PreChess<-scores%/%played
PreChess
cbind(ID,names,ST,pts,preratings,PreChess)
totaldata<-cbind(names,ST,pts,preratings,PreChess)
colnames(totaldata)<-c("Player's Name","Player's State","Total Number of Points","Player's Pre-Rating","Average Pre-Chess Rating")
totaldata
View(totaldata)
View(totaldata)
library(stringi)
temp <- stri_list2matrix(vals, byrow = TRUE)
final <- `dim<-`(as.numeric(temp), dim(temp))
final <- final[,(4:10)]
#convert preratings to factor to insert into data
preratings<-as.factor(preratings)
matchvals<-data.frame(ID,preratings,
stringsAsFactors = TRUE)
matchvals[,1]<-as.numeric(as.character(matchvals[[1]]))
matchvals[,2]<-as.numeric(as.character(matchvals[[2]]))
#replace player with pre tournament scores - prerating
k <- 1
scores<-matrix(nrow=64,ncol=7)
while(k<8) {
scores[,k]<-final[,k]%l%matchvals
k<-k+1
}
scores
grid.table(totaldata)
library(gridExtra)
library(rhandsontable)
install.packages("gridExtra")
grid.table(totaldata)
library(gridExtra)
grid.table(totaldata)
totaldata
formattable(totaldata)
library(formattable)
install.packages("formattable")
library(formattable)
formattable(totaldata)
totaldata<-cbind(ID,names,ST,pts,preratings,PreChess)
colnames(totaldata)<-c("ID","Player's Name","Player's State","Total Number of Points","Player's Pre-Rating","Average Pre-Chess Rating")
typeof(vals)
